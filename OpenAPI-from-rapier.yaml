x-description: '*** This document is not a specification of an API. This document
  includes implementation-specific additions and modifications to an API that are
  designed to aid implementation-aware software like proxies and implementation frameworks.
  If you are looking for the API specification, find the version that was generated
  without implementation extensions and modifications'
swagger: '2.0'
info:
  title: Shipyard Deployment API
  version: '0.1'
consumes:
- application/json
produces:
- application/json
- text/html
x-interfaces:
  Deployment: &Deployment
    get:
      description: Retrieve a Deployment
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Deployment'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Deployment entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Deployment being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Deployment'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Deployment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Deployment
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Deployment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Deployment
  Environment: &Environment
    get:
      description: Retrieve an Environment
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Environment'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an Environment entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Environment being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Environment'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Environment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an Environment
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Environment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Environment
  Environment.deployments: &Environment-deployments
    get:
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Collection'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Deployment
      parameters:
      - description: The representation of the new Deployment being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Deployment'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Deployment
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Deployment
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Deployment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Environment.deployments
  Shipyard:
    get:
      description: Retrieve a Shipyard
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Shipyard'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Shipyard
  Shipyard.environments:
    post:
      description: Create a new Environment
      parameters:
      - description: The representation of the new Environment being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Environment'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Environment
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Environment
              type: string
            Vary:
              description: Make sure a cache of one content type is not returned to
                a client wanting a different one.
              enum:
              - Accept
              type: string
          schema:
            $ref: '#/definitions/Environment'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Shipyard.environments
x-templates:
  '{Environment-URL}':
    $ref: '#/x-interfaces/Environment'
  '{Environment-URL}/deployments':
    $ref: '#/x-interfaces/Environment.deployments'
  '{Environment-URL}/deployments/{name}':
    parameters:
    - in: path
      name: name
      required: true
      type: string
    <<: *Deployment
  '{Shipyard-URL}':
    $ref: '#/x-interfaces/Shipyard'
  '{Shipyard-URL}/environments':
    $ref: '#/x-interfaces/Shipyard.environments'
paths:
  /:
    $ref: '#/x-templates/{Shipyard-URL}'
  /environments:
    $ref: '#/x-templates/{Shipyard-URL}~1environments'
  /environments/{orgName-envName}:
    x-description: '*** This path is not part of the API - it is an implementation-private
      extension'
    parameters:
    - description: This parameter is a private part of the implementation. It is not
        part of the API
      in: path
      name: orgName-envName
      required: true
      type: string
    <<: *Environment
  /environments/{orgName-envName}/deployments:
    x-description: '*** This path is not part of the API - it is an implementation-private
      extension'
    parameters:
    - description: This parameter is a private part of the implementation. It is not
        part of the API
      in: path
      name: orgName-envName
      required: true
      type: string
    <<: *Environment-deployments
  /environments/{orgName-envName}/deployments/{name}:
    x-description: '*** This path is not part of the API - it is an implementation-private
      extension'
    parameters:
    - description: This parameter is a private part of the implementation. It is not
        part of the API
      in: path
      name: orgName-envName
      required: true
      type: string
    - in: path
      name: name
      required: true
      type: string
    <<: *Deployment
definitions:
  ErrorResponse:
    type: string
  Shipyard:
    properties:
      isA:
        type: string
        enum:
        - Shipyard
      environments:
        type: string
        format: uri
        x-interface: '#/x-interfaces/Shipyard.environments'
    readOnly: true
    x-interface: '#/x-interfaces/Shipyard'
  Environment:
    properties:
      isA:
        type: string
        enum:
        - Environment
      sharingSet:
        type: string
        format: uri
      name:
        type: string
      publicSecret:
        type: string
        readOnly: true
      privateSecret:
        type: string
        readOnly: true
      hostnames:
        type: array
        items:
          type: string
      deployments:
        type: string
        format: uri
        x-interface: '#/x-interfaces/Environment.deployments'
    x-interface: '#/x-interfaces/Environment'
  Deployment:
    properties:
      isA:
        type: string
        enum:
        - Deployment
      name:
        type: string
      deploymentName:
        type: string
        description: Name of deployment to be created
      trafficHosts:
        type: string
        description: Where deployment object is routed
      publicPaths:
        type: string
        description: Path of deployment
      replicas:
        type: integer
        description: How many replicas to be deployed
      environment:
        type: string
        format: uri
        x-interface: '#/x-interfaces/Environment'
      podTemplateSpec:
        description: Pod Template Spec. could be a URL or an in-line PTS
        x-oneOf:
        - type: string
          format: uri
        - $ref: '#/definitions/PodTemplateSpec'
    x-interface: '#/x-interfaces/Deployment'
  PodTemplateSpec:
    type: object
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Collection
      contents:
        type: array
        items:
          type: object
    readOnly: true
  Resource:
    type: object
    properties:
      _self:
        type: string
        readOnly: true
      isA:
        type: string
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema:
      $ref: '#/definitions/ErrorResponse'
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema:
      $ref: '#/definitions/ErrorResponse'
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  '404':
    description: Not Found. Resource not found
    schema:
      $ref: '#/definitions/ErrorResponse'
  '406':
    description: Not Acceptable. Requested media type not available
    schema:
      $ref: '#/definitions/ErrorResponse'
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  default:
    description: 5xx errors and other stuff
    schema:
      $ref: '#/definitions/ErrorResponse'
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string
securityDefinitions:
  sso:
    type: oauth2
    scopes: {}
    flow: application
    tokenUrl: whatever
security:
- sso: []

